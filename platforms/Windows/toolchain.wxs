<Wix xmlns="http://wixtoolset.org/schemas/v4/wxs" xmlns:ui="http://wixtoolset.org/schemas/v4/wxs/ui">
  <?include version.wxi?>
  <Package
      Language="1033"
      Manufacturer="swift.org"
      Name="Swift Compiler Tools"
      UpgradeCode="7e95dc06-7f84-4e8e-a038-8304af0468fb"
      Version="$(var.ProductVersion)"
      Scope="perMachine">
    <SummaryInformation Description="Swift Compiler Tools" />

    <!--
      NOTE(compnerd) Use high compression as this is an extrodinarily large
      cabinet.  With upstream being amenable to considering decorations for
      DLL builds, this might be possible to reduce in the future hopefully.
      In the mean time, burn the CPU cycles to try to claw back the minimal
      bit of savings to hedge against the constant complaints that the MSIs
      are too large.
    -->
    <Media Id="1" Cabinet="toolchain.cab" EmbedCab="yes" CompressionLevel="high" />

    <StandardDirectory Id="ProgramFiles6432Folder">
      <Directory Id="INSTALLDIR" Name="Swift">
        <Directory Id="Toolchains" Name="Toolchains">
          <Directory Id="xctoolchain" Name="$(var.ProductVersion)+Asserts">
            <Directory Id="_usr" Name="usr">
              <Directory Id="_usr_bin" Name="bin">
                <!-- binutils -->

                <!-- TODO(compnerd) can we use symbolic links instead? -->
                <Component Id="llvm_dlltool.exe">
                  <File Id="llvm_dlltool.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\llvm-dlltool.exe" Checksum="yes" />
                </Component>
                <Component Id="llvm_lib.exe">
                  <File Id="llvm_lib.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\llvm-lib.exe" Checksum="yes" />
                </Component>
                <Component Id="llvm_ranlib.exe">
                  <File Id="llvm_ranlib.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\llvm-ranlib.exe" Checksum="yes" />
                </Component>
                <Component Id="llvm_readelf.exe">
                  <File Id="llvm_readelf.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\llvm-readelf.exe" Checksum="yes" />
                </Component>
                <Component Id="llvm_strip.exe">
                  <File Id="llvm_strip.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\llvm-strip.exe" Checksum="yes" />
                </Component>
                <!--
                  TODO(compnerd) we should symlink:
                    - addr2line.exe
                    - ar.exe
                    - c++filt.exe
                    - dwp.exe
                    - nm.exe
                    - objcopy.exe
                    - objdump.exe
                    - ranlib.exe
                    - readelf.exe
                    - size.exe
                    - strings.exe
                -->

                <Component Id="dsymutil.exe">
                  <File Id="dsymutil.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\dsymutil.exe" Checksum="yes" />
                </Component>
                <Component Id="llvm_ar.exe">
                  <File Id="llvm_ar.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\llvm-ar.exe" Checksum="yes" />
                </Component>
                <Component Id="llvm_cov.exe">
                  <File Id="llvm_cov.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\llvm-cov.exe" Checksum="yes" />
                </Component>
                <Component Id="llvm_cvtres.exe">
                  <File Id="llvm_cvtres.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\llvm-cvtres.exe" Checksum="yes" />
                </Component>
                <Component Id="llvm_cxxfilt.exe">
                  <File Id="llvm_cxxfilt.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\llvm-cxxfilt.exe" Checksum="yes" />
                </Component>
                <Component Id="llvm_dwarfdump.exe">
                  <File Id="llvm_dwarfdump.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\llvm-dwarfdump.exe" Checksum="yes" />
                </Component>
                <Component Id="llvm_dwp.exe">
                  <File Id="llvm_dwp.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\llvm-dwp.exe" Checksum="yes" />
                </Component>
                <Component Id="llvm_lipo.exe">
                  <File Id="llvm_lipo.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\llvm-lipo.exe" Checksum="yes" />
                </Component>
                <Component Id="llvm_mt.exe">
                  <File Id="llvm_mt.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\llvm-mt.exe" Checksum="yes" />
                </Component>
                <Component Id="llvm_nm.exe">
                  <File Id="llvm_nm.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\llvm-nm.exe" Checksum="yes" />
                </Component>
                <Component Id="llvm_objcopy.exe">
                  <File Id="llvm_objcopy.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\llvm-objcopy.exe" Checksum="yes" />
                </Component>
                <Component Id="llvm_objdump.exe">
                  <File Id="llvm_objdump.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\llvm-objdump.exe" Checksum="yes" />
                </Component>
                <Component Id="llvm_pdbutil.exe">
                  <File Id="llvm_pdbutil.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\llvm-pdbutil.exe" Checksum="yes" />
                </Component>
                <Component Id="llvm_profdata.exe">
                  <File Id="llvm_profdata.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\llvm-profdata.exe" Checksum="yes" />
                </Component>
                <Component Id="llvm_rc.exe">
                  <File Id="llvm_rc.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\llvm-rc.exe" Checksum="yes" />
                </Component>
                <Component Id="llvm_readobj.exe">
                  <File Id="llvm_readobj.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\llvm-readobj.exe" Checksum="yes" />
                </Component>
                <Component Id="llvm_size.exe">
                  <File Id="llvm_size.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\llvm-size.exe" Checksum="yes" />
                </Component>
                <Component Id="llvm_strings.exe">
                  <File Id="llvm_strings.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\llvm-strings.exe" Checksum="yes" />
                </Component>
                <Component Id="llvm_symbolizer.exe">
                  <File Id="llvm_symbolizer.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\llvm-symbolizer.exe" Checksum="yes" />
                </Component>
                <Component Id="llvm_undname.exe">
                  <File Id="llvm_undname.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\llvm-undname.exe" Checksum="yes" />
                </Component>

                <!-- LTO -->
                <Component Id="LTO.dll">
                  <File Id="LTO.dll" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\LTO.dll" Checksum="yes" />
                </Component>

                <!-- TODO(compnerd) can we use symbolic links instead? -->
                <Component Id="clang_cl.exe">
                  <File Id="clang_cl.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\clang-cl.exe" Checksum="yes" />
                </Component>
                <Component Id="clang_cpp.exe">
                  <File Id="clang_cpp.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\clang-cpp.exe" Checksum="yes" />
                </Component>
                <Component Id="clang__.exe">
                  <File Id="clang__.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\clang++.exe" Checksum="yes" />
                </Component>

                <Component Id="clang_format.exe">
                  <File Id="clang_format.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\clang-format.exe" Checksum="yes" />
                </Component>
                <Component Id="clang_tidy.exe">
                  <File Id="clang_tidy.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\clang-tidy.exe" Checksum="yes" />
                </Component>
                <Component Id="clang.exe">
                  <File Id="clang.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\clang.exe" Checksum="yes" />
                </Component>
                <Component Id="clangd.exe">
                  <File Id="clangd.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\clangd.exe" Checksum="yes" />
                </Component>
                <!--
                  TODO(compnerd) we should include:
                  - clang-offload-bundler
                  - optremarks.dll
                  - scan-build
                  - scan-view
                -->

                <Component Id="libclang.dll">
                  <File Id="libclang.dll" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\libclang.dll" Checksum="yes" />
                </Component>
                <Component Id="libIndexStore.dll">
                  <File Id="libIndexStore.dll" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\libIndexStore.dll" Checksum="yes" />
                </Component>

                <!-- lld -->
                <!-- TODO(compnerd) can we use symbolic links instead? -->
                <Component Id="ld.lld.exe">
                  <File Id="ld.lld.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\ld.lld.exe" Checksum="yes" />
                </Component>
                <Component Id="ld64.lld.exe">
                  <File Id="ld64.lld.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\ld64.lld.exe" Checksum="yes" />
                </Component>
                <Component Id="lld_link.exe">
                  <File Id="lld_link.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\lld-link.exe" Checksum="yes" />
                </Component>
                <Component Id="wasm_ld.exe">
                  <File Id="wasm_ld.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\wasm-ld.exe" Checksum="yes" />
                </Component>

                <Component Id="lld.exe">
                  <File Id="lld.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\lld.exe" Checksum="yes" />
                </Component>

                <!-- lldb -->
                <Component Id="lldb_server.exe">
                  <File Id="lldb_server.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\lldb-server.exe" Checksum="yes" />
                </Component>
                <Component Id="lldb_vscode.exe">
                  <File Id="lldb_vscode.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\lldb-vscode.exe" Checksum="yes" />
                </Component>
                <Component Id="lldb.exe">
                  <File Id="lldb.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\lldb.exe" Checksum="yes" />
                </Component>
                <Component Id="repl_swift.exe">
                  <File Id="repl_swift.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\repl_swift.exe" Checksum="yes" />
                </Component>

                <Component Id="liblldb.dll">
                  <File Id="liblldb.dll" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\liblldb.dll" Checksum="yes" />
                </Component>

                <!-- BlocksRuntime -->
                <Component Id="BlocksRuntime.dll">
                  <File Id="BlocksRuntime.dll" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\BlocksRuntime.dll" Checksum="yes" />
                </Component>

                <!-- libdispatch -->
                <Component Id="dispatch.dll">
                  <File Id="dispatch.dll" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\dispatch.dll" Checksum="yes" />
                </Component>

                <!-- SourceKit -->
                <Component Id="sourcekitdInProc.dll">
                  <File Id="sourcekitdInProc.dll" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\sourcekitdInProc.dll" Checksum="yes" />
                </Component>

                <!-- swift -->

                <!-- TODO(compnerd) can we use symbolic links instead? -->
                <Component Id="swift_api_digester.exe">
                  <File Id="swift_api_digester.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\swift-api-digester.exe" Checksum="yes" />
                </Component>
                <Component Id="swift_autolink_extract.exe">
                  <File Id="swift_autolink_extract.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\swift-autolink-extract.exe" Checksum="yes" />
                </Component>
                <Component Id="swift_symbolgraph_extract.exe">
                  <File Id="swift_symbolgraph_extract.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\swift-symbolgraph-extract.exe" Checksum="yes" />
                </Component>

                <Component Id="swift_demangle.exe">
                  <File Id="swift_demangle.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\swift-demangle.exe" Checksum="yes" />
                </Component>
                <Component Id="swift_frontend.exe">
                  <File Id="swift_frontend.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\swift-frontend.exe" Checksum="yes" />
                </Component>

                <Component Id="swiftDemangle.dll">
                  <File Id="swiftDemangle.dll" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\swiftDemangle.dll" Checksum="yes" />
                </Component>
                <Component Id="_InternalSwiftScan.dll">
                  <File Id="_InternalSwiftScan.dll" Source="$(var.TOOLCHAIN_ROOT)\usr\bin\_InternalSwiftScan.dll" Checksum="yes" />
                </Component>

                <!-- llbuild -->
                <Component Id="swift_build_tool.exe">
                  <File Id="swift_build_tool.exe" Source="$(var.DEVTOOLS_ROOT)\usr\bin\swift-build-tool.exe" Checksum="yes" />
                </Component>
                <Component Id="llbuildSwift.dll">
                  <File Id="llbuildSwift.dll" Source="$(var.DEVTOOLS_ROOT)\usr\bin\llbuildSwift.dll" Checksum="yes" />
                </Component>

                <!-- swift-argument-parser -->
                <Component Id="ArgumentParser.dll">
                  <File Id="ArgumentParser.dll" Source="$(var.DEVTOOLS_ROOT)\usr\bin\ArgumentParser.dll" Checksum="yes" />
                </Component>

                <!-- swift-tools-support-core -->
                <Component Id="TSCBasic.dll">
                  <File Id="TSCBasic.dll" Source="$(var.DEVTOOLS_ROOT)\usr\bin\TSCBasic.dll" Checksum="yes" />
                </Component>
                <Component Id="TSCUtility.dll">
                  <File Id="TSCUtility.dll" Source="$(var.DEVTOOLS_ROOT)\usr\bin\TSCUtility.dll" Checksum="yes" />
                </Component>

                <!-- swift-driver -->

                <!-- TODO(compnerd) can we use symbolic links instead? -->
                <Component Id="swiftc.exe">
                  <File Id="swiftc.exe" Name="swiftc.exe" Source="$(var.DEVTOOLS_ROOT)\usr\bin\swift-driver.exe" Checksum="yes" />
                </Component>

                <Component Id="swift.exe">
                  <File Id="swift.exe" Name="swift.exe" Source="$(var.DEVTOOLS_ROOT)\usr\bin\swift-driver.exe" Checksum="yes" />
                </Component>
                <Component Id="swift_help.exe">
                  <File Id="swift_help.exe" Source="$(var.DEVTOOLS_ROOT)\usr\bin\swift-help.exe" Checksum="yes" />
                </Component>
                <Component Id="swift_build_sdk_interfaces.exe">
                  <File Id="swift_build_sdk_interfaces.exe" Source="$(var.DEVTOOLS_ROOT)\usr\bin\swift-build-sdk-interfaces.exe" Checksum="yes" />
                </Component>

                <Component Id="swiftOptions.dll">
                  <File Id="SwiftOptions.dll" Source="$(var.DEVTOOLS_ROOT)\usr\bin\SwiftOptions.dll" Checksum="yes" />
                </Component>
                <Component Id="swiftDriver.dll">
                  <File Id="SwiftDriver.dll" Source="$(var.DEVTOOLS_ROOT)\usr\bin\SwiftDriver.dll" Checksum="yes" />
                </Component>
                <Component Id="swiftDriverExecution.dll">
                  <File Id="SwiftDriverExecution.dll" Source="$(var.DEVTOOLS_ROOT)\usr\bin\SwiftDriverExecution.dll" Checksum="yes" />
                </Component>
              </Directory>

              <Directory Id="_usr_include" Name="include">
                <Directory Id="_usr_include__InternalSwiftScan" Name="_InternalSwiftScan">
                  <Component Id="DependencyScan.h">
                    <File Id="DependencyScan.h" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\swift\_InternalSwiftScan\DependencyScan.h" Checksum="yes" />
                  </Component>
                  <Component Id="DependencyScanMacros.h">
                    <File Id="DependencyScanMacros.h" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\swift\_InternalSwiftScan\DependencyScanMacros.h" Checksum="yes" />
                  </Component>
                  <Component Id="_InternalSwiftScan.modulemap">
                    <File Id="_InternalSwiftScan.modulemap" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\swift\_InternalSwiftScan\module.modulemap" Checksum="yes" />
                  </Component>
                </Directory>

                <Directory Id="_usr_include_clang_c" Name="clang-c">
                  <Component Id="BuildSystem.h">
                    <File Id="BuildSystem.h" Source="$(var.TOOLCHAIN_ROOT)\usr\include\clang-c\BuildSystem.h" Checksum="yes" />
                  </Component>
                  <Component Id="CXCompilationDatabase.h">
                    <File Id="CXCompilationDatabase.h" Source="$(var.TOOLCHAIN_ROOT)\usr\include\clang-c\CXCompilationDatabase.h" Checksum="yes" />
                  </Component>
                  <Component Id="CXErrorCode.h">
                    <File Id="CXErrorCode.h" Source="$(var.TOOLCHAIN_ROOT)\usr\include\clang-c\CXErrorCode.h" Checksum="yes" />
                  </Component>
                  <Component Id="CXString.h">
                    <File Id="CXString.h" Source="$(var.TOOLCHAIN_ROOT)\usr\include\clang-c\CXString.h" Checksum="yes" />
                  </Component>
                  <Component Id="Documentation.h">
                    <File Id="Documentation.h" Source="$(var.TOOLCHAIN_ROOT)\usr\include\clang-c\Documentation.h" Checksum="yes" />
                  </Component>
                  <Component Id="FatalErrorHandler.h">
                    <File Id="FatalErrorHandler.h" Source="$(var.TOOLCHAIN_ROOT)\usr\include\clang-c\FatalErrorHandler.h" Checksum="yes" />
                  </Component>
                  <Component Id="Index.h">
                    <File Id="Index.h" Source="$(var.TOOLCHAIN_ROOT)\usr\include\clang-c\Index.h" Checksum="yes" />
                  </Component>
                  <Component Id="Platform.h">
                    <File Id="Platform.h" Source="$(var.TOOLCHAIN_ROOT)\usr\include\clang-c\Platform.h" Checksum="yes" />
                  </Component>
                  <Component Id="Refactor.h">
                    <File Id="Refactor.h" Source="$(var.TOOLCHAIN_ROOT)\usr\include\clang-c\Refactor.h" Checksum="yes" />
                  </Component>
                </Directory>

                <Directory Id="_usr_include_dispatch" Name="dispatch">
                </Directory>

                <Directory Id="_usr_include_indexstore" Name="indexstore">
                  <Component Id="indexstore.h">
                    <File Id="indexstore.h" Source="$(var.TOOLCHAIN_ROOT)\usr\local\include\indexstore\indexstore.h" Checksum="yes" />
                  </Component>
                  <Component Id="IndexStoreCXX.h">
                    <File Id="IndexStoreCXX.h" Source="$(var.TOOLCHAIN_ROOT)\usr\local\include\indexstore\IndexStoreCXX.h" Checksum="yes" />
                  </Component>
                </Directory>

                <Directory Id="_usr_include_lldb" Name="lldb">
                </Directory>

                <Directory Id="_usr_include_llvm_c" Name="llvm-c">
                  <Component Id="lto.h">
                    <File Id="lto.h" Source="$(var.TOOLCHAIN_ROOT)\usr\include\llvm-c\lto.h" Checksum="yes" />
                  </Component>
                </Directory>

                <Directory Id="_usr_include_os" Name="os">
                </Directory>

                <!-- TODO(compnerd) should we install the block headers? -->

                <Directory Id="_usr_include_SourceKit" Name="SourceKit">
                  <Component Id="sourcekitd.h">
                    <File Id="sourcekitd.h" Source="$(var.TOOLCHAIN_ROOT)\usr\include\SourceKit\sourcekitd.h" Checksum="yes" />
                  </Component>
                </Directory>
              </Directory>

              <Directory Id="_usr_lib" Name="lib">
                <Component Id="LTO.lib">
                  <File Id="LTO.lib" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\LTO.lib" Checksum="yes" />
                </Component>

                <Component Id="libclang.lib">
                  <File Id="libclang.lib" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\libclang.lib" Checksum="yes" />
                </Component>
                <Component Id="libIndexStore.lib">
                  <File Id="libIndexStore.lib" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\libIndexStore.lib" Checksum="yes" />
                </Component>

                <Component Id="liblldb.lib">
                  <File Id="liblldb.lib" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\liblldb.lib" Checksum="yes" />
                </Component>

                <Component Id="BlocksRuntime.lib">
                  <File Id="BlocksRuntime.lib" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\BlocksRuntime.lib" Checksum="yes" />
                </Component>

                <Component Id="dispatch.lib">
                  <File Id="dispatch.lib" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\dispatch.lib" Checksum="yes" />
                </Component>

                <Component Id="sourcekitdInProc.lib">
                  <File Id="sourcekitdInProc.lib" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\sourcekitdInProc.lib" Checksum="yes" />
                </Component>

                <Component Id="swiftDemangle.lib">
                  <File Id="swiftDemangle.lib" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\swiftDemangle.lib" Checksum="yes" />
                </Component>
                <Component Id="_InternalSwiftScan.lib">
                  <File Id="_InternalSwiftScan.lib" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\swift\windows\_InternalSwiftScan.lib" Checksum="yes" />
                </Component>

                <Directory Id="_usr_lib_clang" Name="clang">
                </Directory>

                <Directory Id="_usr_lib_site_packages" Name="site-packages">
                  <Directory Id="_usr_lib_site_packages_lldb" Name="lldb">
                    <Component Id="__init__.py_c31e016e2f8b4fba9eebd73d5009e919">
                      <File Id="___init__.py_c31e016e2f8b4fba9eebd73d5009e919" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\site-packages\lldb\__init__.py" Checksum="yes" />
                    </Component>
                    <Component Id="_lldb.py">
                      <File Id="_lldb.pyd" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\site-packages\lldb\_lldb.pyd" Checksum="yes" />
                    </Component>
                    <Component Id="embedded_interpreter.py">
                      <File Id="embedded_interpreter.py" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\site-packages\lldb\embedded_interpreter.py" Checksum="yes" />
                    </Component>
                    <Component Id="lldb_argdumper.exe">
                      <File Id="lldb_argdumper.exe" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\site-packages\lldb\lldb-argdumper.exe" Checksum="yes" />
                    </Component>

                    <Directory Id="_usr_lib_site_packages_lldb_formatters" Name="formatters">
                      <Component Id="logger.py">
                        <File Id="logger.py" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\site-packages\lldb\formatters\Logger.py" Checksum="yes" />
                      </Component>
                      <Component Id="__init__.py_6124a6ee9e584275b153b0e1ddb4a2b2">
                        <File Id="___init__.py_6124a6ee9e584275b153b0e1ddb4a2b2" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\site-packages\lldb\formatters\__init__.py" Checksum="yes" />
                      </Component>
                      <Component Id="attrib_fromdict.py">
                        <File Id="attrib_fromdict.py" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\site-packages\lldb\formatters\attrib_fromdict.py" Checksum="yes" />
                      </Component>
                      <Component Id="cache.py">
                        <File Id="cache.py" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\site-packages\lldb\formatters\cache.py" Checksum="yes" />
                      </Component>
                      <Component Id="metrics.py">
                        <File Id="metrics.py" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\site-packages\lldb\formatters\metrics.py" Checksum="yes" />
                      </Component>
                      <Component Id="synth.py">
                        <File Id="synth.py" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\site-packages\lldb\formatters\synth.py" Checksum="yes" />
                      </Component>

                      <Directory Id="_usr_lib_site_packages_lldb_formatters_cpp" Name="cpp">
                        <Component Id="__init__.py_1bd1d2dc68b7417b83484f6183339af2">
                          <File Id="___init__.py_1bd1d2dc68b7417b83484f6183339af2" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\site-packages\lldb\formatters\cpp\__init__.py" Checksum="yes" />
                        </Component>
                        <Component Id="gnu_libstdcpp.py">
                          <File Id="gnu_libstdcpp.py" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\site-packages\lldb\formatters\cpp\gnu_libstdcpp.py" Checksum="yes" />
                        </Component>
                        <Component Id="libcxx.py">
                          <File Id="libcxx.py" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\site-packages\lldb\formatters\cpp\libcxx.py" Checksum="yes" />
                        </Component>
                      </Directory>
                    </Directory>

                    <Directory Id="_usr_lib_site_packages_lldb_utils" Name="utils">
                      <Component Id="__init__.py_52ef75ed702f4acc8272e6b2f8aa5392">
                        <File Id="___init__.py_52ef75ed702f4acc8272e6b2f8aa5392" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\site-packages\lldb\utils\__init__.py" Checksum="yes" />
                      </Component>
                      <Component Id="in_call_stack.py">
                        <File Id="in_call_stack.py" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\site-packages\lldb\utils\in_call_stack.py" Checksum="yes" />
                      </Component>
                      <Component Id="symbolication.py">
                        <File Id="symbolication.py" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\site-packages\lldb\utils\symbolication.py" Checksum="yes" />
                      </Component>
                    </Directory>
                  </Directory>
                </Directory>

                <Directory Id="_usr_lib_swift" Name="swift">
                  <Directory Id="_usr_lib_swift_swiftToCxx" Name="swiftToCxx">
                    <Component Id="_SwiftCxxInteroperability.h">
                      <File Id="_SwiftCxxInteroperability.h" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\swift\swiftToCxx\_SwiftCxxInteroperability.h" Checksum="yes" />
                    </Component>
                    <Component Id="_SwiftStdlibCxxOverlay.h">
                      <File Id="_SwiftStdlibCxxOverlay.h" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\swift\swiftToCxx\_SwiftStdlibCxxOverlay.h" Checksum="yes" />
                    </Component>
                    <Component Id="experimental_interoperability_version.json">
                      <File Id="experimental_interoperability_version.json" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\swift\swiftToCxx\experimental-interoperability-version.json" Checksum="yes" />
                    </Component>
                  </Directory>

                  <Directory Id="_usr_lib_swift_migrator" Name="migrator">
                    <Component Id="ios4.json">
                      <File Id="ios4.json" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\swift\migrator\ios4.json" Checksum="yes" />
                    </Component>
                    <Component Id="ios42.json">
                      <File Id="ios42.json" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\swift\migrator\ios42.json" Checksum="yes" />
                    </Component>
                    <Component Id="macos4.json">
                      <File Id="macos4.json" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\swift\migrator\macos4.json" Checksum="yes" />
                    </Component>
                    <Component Id="macos42.json">
                      <File Id="macos42.json" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\swift\migrator\macos42.json" Checksum="yes" />
                    </Component>
                    <Component Id="overlay4.json">
                      <File Id="overlay4.json" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\swift\migrator\overlay4.json" Checksum="yes" />
                    </Component>
                    <Component Id="overlay42.json">
                      <File Id="overlay42.json" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\swift\migrator\overlay42.json" Checksum="yes" />
                    </Component>
                    <Component Id="tvos4.json">
                      <File Id="tvos4.json" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\swift\migrator\tvos4.json" Checksum="yes" />
                    </Component>
                    <Component Id="tvos42.json">
                      <File Id="tvos42.json" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\swift\migrator\tvos42.json" Checksum="yes" />
                    </Component>
                    <Component Id="watchos4.json">
                      <File Id="watchos4.json" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\swift\migrator\watchos4.json" Checksum="yes" />
                    </Component>
                    <Component Id="watchos42.json">
                      <File Id="watchos42.json" Source="$(var.TOOLCHAIN_ROOT)\usr\lib\swift\migrator\watchos42.json" Checksum="yes" />
                    </Component>
                  </Directory>

                  <Directory Id="_usr_lib_swift_shims" Name="shims">
                  </Directory>
                </Directory>
              </Directory>

              <Directory Id="_usr_libexec" Name="libexec">
              </Directory>

              <Directory Id="_usr_share" Name="share">
                <Directory Id="_usr_share_swift" Name="swift">
                  <Component Id="features.json">
                    <File Id="features.json" Source="$(var.TOOLCHAIN_ROOT)\usr\share\swift\features.json" Checksum="yes" />
                  </Component>
                </Directory>
              </Directory>
            </Directory>
          </Directory>
        </Directory>

        <Component Id="EnvironmentVariables" Directory="INSTALLDIR" Guid="d01ea5b8-0f8a-4388-9b61-1186efddfc39">
          <Environment Id="DeveloperDir" Action="set" Name="DEVELOPER_DIR" Part="all" Permanent="no" System="yes" Value="[INSTALLDIR]Library\Developer" />
          <Environment Id="Path" Action="set" Name="Path" Part="last" Permanent="no" System="yes" Value="[INSTALLDIR]Library\Developer\Toolchains\$(var.ProductVersion)+Asserts\usr\bin" />
        </Component>
      </Directory>
    </StandardDirectory>

    <Feature Id="Toolchain" AllowAbsent="no" AllowAdvertise="yes" ConfigurableDirectory="INSTALLDIR" Description="Swift Compiler Tools" Level="1" Title="Swift Compiler Tools">
      <!-- binutils -->
      <ComponentRef Id="llvm_dlltool.exe" />
      <ComponentRef Id="llvm_lib.exe" />
      <ComponentRef Id="llvm_ranlib.exe" />
      <ComponentRef Id="llvm_readelf.exe" />
      <ComponentRef Id="llvm_strip.exe" />
      <ComponentRef Id="dsymutil.exe" />
      <ComponentRef Id="llvm_ar.exe" />
      <ComponentRef Id="llvm_cov.exe" />
      <ComponentRef Id="llvm_cvtres.exe" />
      <ComponentRef Id="llvm_cxxfilt.exe" />
      <ComponentRef Id="llvm_dwarfdump.exe" />
      <ComponentRef Id="llvm_dwp.exe" />
      <ComponentRef Id="llvm_lipo.exe" />
      <ComponentRef Id="llvm_mt.exe" />
      <ComponentRef Id="llvm_nm.exe" />
      <ComponentRef Id="llvm_objcopy.exe" />
      <ComponentRef Id="llvm_objdump.exe" />
      <ComponentRef Id="llvm_pdbutil.exe" />
      <ComponentRef Id="llvm_profdata.exe" />
      <ComponentRef Id="llvm_rc.exe" />
      <ComponentRef Id="llvm_readobj.exe" />
      <ComponentRef Id="llvm_size.exe" />
      <ComponentRef Id="llvm_strings.exe" />
      <ComponentRef Id="llvm_symbolizer.exe" />
      <ComponentRef Id="llvm_undname.exe" />

      <!-- LTO -->
      <ComponentRef Id="LTO.dll" />
      <ComponentRef Id="LTO.lib" />
      <ComponentRef Id="lto.h" />

      <!-- clang -->
      <ComponentRef Id="clang_cl.exe" />
      <ComponentRef Id="clang_cpp.exe" />
      <ComponentRef Id="clang__.exe" />
      <ComponentRef Id="clang_format.exe" />
      <ComponentRef Id="clang_tidy.exe" />
      <ComponentRef Id="clang.exe" />
      <ComponentRef Id="clangd.exe" />

      <ComponentRef Id="libclang.dll" />
      <ComponentRef Id="libclang.lib" />
      <ComponentRef Id="libIndexStore.dll" />
      <ComponentRef Id="libIndexStore.lib" />

      <ComponentRef Id="BuildSystem.h" />
      <ComponentRef Id="CXCompilationDatabase.h" />
      <ComponentRef Id="CXErrorCode.h" />
      <ComponentRef Id="CXString.h" />
      <ComponentRef Id="Documentation.h" />
      <ComponentRef Id="FatalErrorHandler.h" />
      <ComponentRef Id="Index.h" />
      <ComponentRef Id="Platform.h" />
      <ComponentRef Id="Refactor.h" />

      <ComponentRef Id="indexstore.h" />
      <ComponentRef Id="IndexStoreCXX.h" />

      <!-- lld -->
      <ComponentRef Id="ld.lld.exe" />
      <ComponentRef Id="ld64.lld.exe" />
      <ComponentRef Id="lld_link.exe" />
      <ComponentRef Id="wasm_ld.exe" />
      <ComponentRef Id="lld.exe" />

      <!-- lldb -->
      <ComponentRef Id="lldb_server.exe" />
      <ComponentRef Id="lldb_vscode.exe" />
      <ComponentRef Id="lldb.exe" />
      <ComponentRef Id="repl_swift.exe" />
      <ComponentRef Id="liblldb.dll" />

      <ComponentRef Id="liblldb.lib" />

      <ComponentRef Id="__init__.py_c31e016e2f8b4fba9eebd73d5009e919" />
      <ComponentRef Id="_lldb.py" />
      <ComponentRef Id="embedded_interpreter.py" />
      <ComponentRef Id="lldb_argdumper.exe" />

      <ComponentRef Id="logger.py" />
      <ComponentRef Id="__init__.py_6124a6ee9e584275b153b0e1ddb4a2b2" />
      <ComponentRef Id="attrib_fromdict.py" />
      <ComponentRef Id="cache.py" />
      <ComponentRef Id="metrics.py" />
      <ComponentRef Id="synth.py" />

      <ComponentRef Id="__init__.py_1bd1d2dc68b7417b83484f6183339af2" />
      <ComponentRef Id="gnu_libstdcpp.py" />
      <ComponentRef Id="libcxx.py" />

      <ComponentRef Id="__init__.py_52ef75ed702f4acc8272e6b2f8aa5392" />
      <ComponentRef Id="in_call_stack.py" />
      <ComponentRef Id="symbolication.py" />

      <!-- BlocksRuntime -->
      <ComponentRef Id="BlocksRuntime.dll" />
      <ComponentRef Id="BlocksRuntime.lib" />

      <!-- libdispatch -->
      <ComponentRef Id="dispatch.dll" />
      <ComponentRef Id="dispatch.lib" />

      <!-- SourceKit -->
      <ComponentRef Id="sourcekitdInProc.dll" />
      <ComponentRef Id="sourcekitdInProc.lib" />
      <ComponentRef Id="sourcekitd.h" />

      <!-- swift -->
      <ComponentRef Id="swift_api_digester.exe" />
      <ComponentRef Id="swift_autolink_extract.exe" />
      <ComponentRef Id="swift_symbolgraph_extract.exe" />
      <ComponentRef Id="swift_demangle.exe" />
      <ComponentRef Id="swift_frontend.exe" />

      <ComponentRef Id="swiftDemangle.dll" />
      <ComponentRef Id="swiftDemangle.lib" />
      <ComponentRef Id="_InternalSwiftScan.dll" />
      <ComponentRef Id="_InternalSwiftScan.lib" />

      <ComponentRef Id="DependencyScan.h" />
      <ComponentRef Id="DependencyScanMacros.h" />
      <ComponentRef Id="_InternalSwiftScan.modulemap" />

      <ComponentRef Id="_SwiftCxxInteroperability.h" />
      <ComponentRef Id="_SwiftStdlibCxxOverlay.h" />
      <ComponentRef Id="experimental_interoperability_version.json" />

      <ComponentRef Id="ios4.json" />
      <ComponentRef Id="ios42.json" />
      <ComponentRef Id="macos4.json" />
      <ComponentRef Id="macos42.json" />
      <ComponentRef Id="overlay4.json" />
      <ComponentRef Id="overlay42.json" />
      <ComponentRef Id="tvos4.json" />
      <ComponentRef Id="tvos42.json" />
      <ComponentRef Id="watchos4.json" />
      <ComponentRef Id="watchos42.json" />

      <ComponentRef Id="features.json" />

      <!-- llbuild -->
      <ComponentRef Id="swift_build_tool.exe" />
      <ComponentRef Id="llbuildSwift.dll" />

      <!-- swift-argument-parser -->
      <ComponentRef Id="ArgumentParser.dll" />

      <!-- swift-tools-support-core -->
      <ComponentRef Id="TSCBasic.dll" />
      <ComponentRef Id="TSCUtility.dll" />

      <!-- swift-driver -->
      <ComponentRef Id="swiftc.exe" />
      <ComponentRef Id="swift.exe" />
      <ComponentRef Id="swift_help.exe" />
      <ComponentRef Id="swift_build_sdk_interfaces.exe" />
      <ComponentRef Id="swiftOptions.dll" />
      <ComponentRef Id="swiftDriver.dll" />
      <ComponentRef Id="swiftDriverExecution.dll" />

      <ComponentGroupRef Id="ClangResources" />

      <ComponentRef Id="EnvironmentVariables" />
    </Feature>

    <UI>
      <ui:WixUI Id="WixUI_InstallDir" />
      <Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="InstallDirDlg" Order="2" />
      <Publish Dialog="InstallDirDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg" Order="2" />
    </UI>

    <Property Id="WIXUI_INSTALLDIR" Value="INSTALLDIR"></Property>

    <WixVariable Id="WixUIDialogBmp" Value="Resources\swift_dialog.png" />
    <WixVariable Id="WixUIBannerBmp" Value="Resources\swift_banner.png" />
  </Package>
</Wix>
